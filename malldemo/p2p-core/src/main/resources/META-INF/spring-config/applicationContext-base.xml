<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.3.xsd


       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task-4.3.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.3.xsd"
       default-lazy-init="true">

    <bean id="refProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
    <property name="locations">
        <list>
            <value>classpath*:/META-INF/properties/*.properties</value>
            <value>/META-INF/properties/*.properties</value>
        </list>
    </property>
    </bean>
    <context:property-placeholder ignore-unresolvable="true" local-override="true" properties-ref="refProperties"/>
    <context:component-scan base-package="info.bfly,com.ocpsoft.pretty"/>
    <tx:annotation-driven mode="aspectj" transaction-manager="transactionManager" proxy-target-class="true"/>
    <context:load-time-weaver/>
    <task:executor id="executor" pool-size="20"/>
    <task:annotation-driven executor="executor"/>

    <bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
        <property name="scopes">
            <map>
                <entry key="view">
                    <bean class="org.springframework.web.context.request.ViewScope"/>
                </entry>
            </map>
        </property>
    </bean>

    <!-- 受spring托管的bean自动切入日志，使用方法： @Log private static Log log ; -->
    <bean class="info.bfly.core.bean.factory.config.LogBeanPostProcessor"/>
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" >
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${oauth.token.access.expiresInSeconds}"/>
        <property name="minEvictableIdleTimeMillis" value="3600000"/>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <value>
                hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
                hibernate.hbm2ddl.auto=update
                hibernate.show_sql=false
                hibernate.format_sql=false
                hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
                hibernate.cache.use_second_level_cache=false
                hibernate.cache.use_query_cache=false
            </value>
        </property>
         <property name="packagesToScan">
             <array>
                  <value>info.bfly.*.*.model</value>
                  <value>info.bfly.*.*.*.model</value>
             </array>
         </property>
    </bean>
    <bean id="defaultLobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler"/>

    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean id="FacesServlet" class="javax.faces.webapp.FacesServlet">
    </bean>

    <bean id="ht" class="org.springframework.orm.hibernate5.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>


    <!-- quartz持久化存储 -->
    <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jobFactory">
            <bean class="info.bfly.core.quartz.AutowiringSpringBeanJobFactory "/>
            <!-- <bean class="org.springframework.scheduling.quartz.SpringBeanJobFactory" /> -->
        </property>
        <property name="schedulerName" value="Mscheduler"/>
        <property name="configLocation" value="classpath:META-INF/properties/quartz.properties"/>
        <property name="applicationContextSchedulerContextKey" value="applicationContextKey"/>
        <property name="autoStartup" value="true"/>
    </bean>



    <!-- 配制事务的传播特性 <tx:advice id="txAdvice" transaction-manager="txManager"> <tx:attributes> <tx:method name="add*" propagation="REQUIRED" /> <tx:method name="register*" propagation="REQUIRED" /> <tx:method
      name="delete*" propagation="REQUIRED" /> <tx:method name="update*" propagation="REQUIRED" /> <tx:method name="merge*" propagation="REQUIRED" /> <tx:method name="save*" propagation="REQUIRED" /> <tx:method
      name="createOrUpdate*" propagation="REQUIRED" /> <tx:method name="clearAndSaveOrUpdate*" propagation="REQUIRED" /> <tx:method name="*" read-only="true" /> </tx:attributes> </tx:advice> <aop:config proxy-target-class="true">
      <aop:advisor advice-ref="txAdvice" pointcut="execution(* info.bfly.archer.*.service.impl.*.*(..))" /> </aop:config> -->
</beans>