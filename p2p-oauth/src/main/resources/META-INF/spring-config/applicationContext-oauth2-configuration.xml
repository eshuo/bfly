<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
       xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                      http://www.springframework.org/schema/beans/spring-beans.xsd
                      http://www.springframework.org/schema/security/oauth2
                      http://www.springframework.org/schema/security/spring-security-oauth2.xsd
                      http://www.springframework.org/schema/security
                      http://www.springframework.org/schema/security/spring-security.xsd"
       default-lazy-init="true">


    <oauth:authorization-server client-details-service-ref="client-details-service" token-services-ref="tokenServices">
        <oauth:refresh-token  />
        <oauth:password authentication-manager-ref="userAuthenticationManager"/>
    </oauth:authorization-server>

    <oauth:resource-server id="resourceServerFilter" token-services-ref="tokenServices" entry-point-ref="oauthAuthenticationEntryPoint"/>

    <bean id="customerOAuth2ExceptionRender" class="org.springframework.security.oauth2.provider.error.DefaultOAuth2ExceptionRenderer">
        <property name="messageConverters">
            <list>
                <ref bean="customerMappingJacksonConverter"/>
            </list>
        </property>
    </bean>

    <bean id="customerMappingJacksonConverter" class="info.bfly.converter.MappingJacksonConverter"/>

    <bean id="clientCredentialsTokenEndpointFilter"
          class="org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter">
        <property name="authenticationManager" ref="clientAuthenticationManager"/>

    </bean>

    <bean id="clientAuthenticationEntryPoint"
          class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
        <property name="typeName" value="Basic"/>
        <property name="exceptionRenderer" ref="customerOAuth2ExceptionRender"/>
    </bean>

    <bean id="oauthAuthenticationEntryPoint"
          class="org.springframework.security.oauth2.provider.error.OAuth2AuthenticationEntryPoint">
        <property name="realmName" value="test"/>

        <property name="exceptionRenderer" ref="customerOAuth2ExceptionRender"/>
    </bean>

    <bean id="oauthAccessDeniedHandler"
          class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler">
        <property name="exceptionRenderer" ref="customerOAuth2ExceptionRender"/>
    </bean>


    <bean id="tokenServices" class="org.springframework.security.oauth2.provider.token.DefaultTokenServices">
        <property name="tokenStore" ref="tokenStore"/>
        <property name="supportRefreshToken" value="true"/>
        <property name="clientDetailsService" ref="client-details-service"/>
        <property name="authenticationManager" ref="userAuthenticationManager" />
    </bean>

    <bean id="corsFilter" class="info.bfly.filter.spring.SpringCrossOriginResourceSharingFilter"/>


    <!-- The token endpoint See org.springframework.security.oauth2.provider.endpoint.TokenEndpoint-->
    <sec:http pattern="/oauth/token" create-session="never" authentication-manager-ref="clientAuthenticationManager" entry-point-ref="clientAuthenticationEntryPoint">
        <sec:anonymous enabled="false"/>
        <sec:csrf disabled="true"/>
        <sec:http-basic/>
        <sec:access-denied-handler ref="oauthAccessDeniedHandler"/>
        <sec:custom-filter ref="corsFilter" after="LAST"/>
    </sec:http>

</beans>